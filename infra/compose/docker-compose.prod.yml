version: '3.8'

services:
  llm-advisor:
    build:
      context: .
      dockerfile: packages/llm-advisor/Dockerfile
      args:
        ENV: prod
        BUILD_ID: ${BUILD_ID:-latest}
    image: skidbladnir/llm-advisor:${TAG:-latest}
    container_name: skidbladnir-llm-advisor
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G
        reservations:
          cpus: '1'
          memory: 4G
      restart_policy:
        condition: on-failure
        max_attempts: 5
    ports:
      - "3001:3000"
    volumes:
      - ./models/prod:/app/models
      - ./data/prod:/app/data
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - API_RATE_LIMIT=100
      - RETRY_ATTEMPTS=5
      - CIRCUIT_BREAKER_THRESHOLD=10
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - skidbladnir-network

  api-bridge:
    build:
      context: .
      dockerfile: packages/api-bridge/Dockerfile
      args:
        ENV: prod
        BUILD_ID: ${BUILD_ID:-latest}
    image: skidbladnir/api-bridge:${TAG:-latest}
    container_name: skidbladnir-api-bridge
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
      restart_policy:
        condition: on-failure
        max_attempts: 5
    ports:
      - "3002:3000"
    depends_on:
      - llm-advisor
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - LLM_ADVISOR_URL=http://llm-advisor:3000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - skidbladnir-network

  ui:
    build:
      context: .
      dockerfile: packages/ui/Dockerfile
      args:
        ENV: prod
        BUILD_ID: ${BUILD_ID:-latest}
    image: skidbladnir/ui:${TAG:-latest}
    container_name: skidbladnir-ui
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
      restart_policy:
        condition: on-failure
        max_attempts: 5
    ports:
      - "3000:3000"
    depends_on:
      - api-bridge
    environment:
      - NODE_ENV=production
      - API_URL=http://api-bridge:3000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - skidbladnir-network

  # Add monitoring services for production
  prometheus:
    image: prom/prometheus:latest
    container_name: skidbladnir-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - skidbladnir-network

  grafana:
    image: grafana/grafana:latest
    container_name: skidbladnir-grafana
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    ports:
      - "3003:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - skidbladnir-network

networks:
  skidbladnir-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: