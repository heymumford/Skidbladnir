{
  "name": "skidbladnir",
  "version": "0.3.0-b61",
  "description": "A robust, plugin-based platform for migrating test assets between various test management systems",
  "main": "index.js",
  "scripts": {
    "test": "jest --config=config/jest.config.js",
    "test:build": "mocha tests/build/test_build_system.js",
    "test:ts": "jest --config=config/jest.config.js --testPathPattern='.*\\.(test|spec)\\.tsx?$'",
    "test:py": "./scripts/run-python-tests.sh",
    "test:py:unit": "python -m pytest tests/unit/python -v",
    "test:py:integration": "python -m pytest tests/integration/python -v",
    "test:go": "cd cmd/binary-processor && go test -mod=../config/go.mod ./...",
    "test:integration": "jest --config=config/jest.config.js --testPathPattern='tests/integration'",
    "test:unit": "jest --config=config/jest.config.js --testPathPattern='tests/unit'",
    "test:arch": "jest --config=config/jest.config.js --testPathPattern='tests/unit/architecture'",
    "test:e2e": "jest --config=config/jest.config.js --testPathPattern='tests/e2e'",
    "test:domain": "./scripts/run-domain-tests.sh",
    "test:all": "npm run test:unit && npm run test:domain && npm run test:py && npm run test:go && npm run test:integration && npm run test:e2e && npm run test:acceptance && npm run test:api",
    "test:mocks": "jest --config=config/jest.config.js --testRegex='.*Mock.*\\.test\\.(ts|tsx)$'",
    "test:zephyr": "node scripts/test-zephyr-connectivity.js",
    "test:qtest:parameters": "node scripts/test-qtest-parameters-connectivity.js",
    "test:qtest:scenario": "node scripts/test-qtest-scenario-connectivity.js",
    "test:qtest:data-export": "node scripts/test-qtest-data-export-connectivity.js",
    "coverage:check": "jest --config=config/jest.config.js --coverage",
    "coverage:check:unified": "bash scripts/check-coverage.sh",
    "coverage:go": "./scripts/run-go-coverage.sh",
    "coverage:go:visualize": "./scripts/run-go-coverage.sh --visualize",
    "coverage:go:check": "./scripts/go-coverage-check.sh",
    "coverage:visualize": "ts-node packages/tdd-metrics-tool/src/bin/visualize-coverage.ts --report test-results/tdd-metrics/metrics-report.json --output test-results/coverage-visualization --language-breakdown --file-details --interactive",
    "tdd-metrics:go": "cd internal/go/binary-processor && go test -coverprofile=coverage.out && go tool cover -func=coverage.out && go tool cover -html=coverage.out -o coverage.html",
    "tdd-metrics:all": "./scripts/run-tdd-metrics.sh",
    "tdd-metrics:visualize": "./scripts/run-tdd-metrics.sh --visualize",
    "test:report": "jest --config=config/jest.config.js --json --outputFile=test-results/test-report.json && node scripts/generate-test-report.js",
    "test:ui": "jest --config=config/jest.ui.config.js",
    "test:acceptance": "cucumber-js",
    "test:acceptance:dev": "cucumber-js --profile dev",
    "test:acceptance:wip": "cucumber-js --profile wip",
    "test:acceptance:smoke": "cucumber-js --profile smoke",
    "test:acceptance:ci": "cucumber-js --profile ci",
    "test:api": "mvn test -f tests/api-integration/pom.xml",
    "test:api:contracts": "mvn test -f tests/api-integration/pom.xml -Dtest=ContractTests",
    "test:api:polyglot": "mvn test -f tests/api-integration/pom.xml -Dtest=ContractTests#testPolyglotApiContract",
    "test:api:integration": "mvn test -f tests/api-integration/pom.xml -Dtest=IntegrationTests",
    "test:api:performance": "mvn test -f tests/api-integration/pom.xml -Dtest=PerformanceTests -Dkarate.env=perf",
    "test:api:mocks": "mvn test -f tests/api-integration/pom.xml -Dtest=MockTests",
    "test:api:migration": "mvn test -f tests/api-integration/pom.xml -Dtest=MigrationTests",
    "test:api:cross-component": "mvn test -f tests/api-integration/pom.xml -Dtest=ContractTests#testCrossComponentOnly",
    "test:workflow": "./scripts/run-ui-workflow-tests.sh",
    "test:workflow:parallel": "./scripts/run-ui-workflow-tests.sh --parallel --max-workers 4",
    "test:cross-browser": "./scripts/run-cross-browser-tests.sh",
    "test:cross-browser:chrome": "./scripts/run-cross-browser-tests.sh --browsers chrome",
    "test:cross-browser:firefox": "./scripts/run-cross-browser-tests.sh --browsers firefox",
    "test:cross-browser:edge": "./scripts/run-cross-browser-tests.sh --browsers edge",
    "test:cross-browser:parallel": "./scripts/run-cross-browser-tests.sh --parallel",
    "cypress:open": "cypress open",
    "test:xml": "node -e \"require('ts-node').register(); require('./tests/unit/validation/xml-schema/cli/validate-xml.ts');\"",
    "test:xml:pom": "node -e \"require('ts-node').register(); require('./tests/unit/validation/xml-schema/cli/validate-xml.ts');\" -- -p '**/*pom.xml' -v",
    "lint": "npm run lint:ts && npm run lint:py && npm run lint:go && npm run lint:arch && npm run lint:xml",
    "lint:xml": "npm run test:xml -- --verbose",
    "lint:ts": "eslint --ext .ts,.tsx .",
    "lint:py": "poetry run flake8 && poetry run black --check .",
    "lint:go": "cd cmd/binary-processor && go vet -mod=../config/go.mod ./...",
    "lint:arch": "npm run check:architecture -- --architecture --circular",
    "hooks:install": "./scripts/git-hooks/install.sh",
    "postinstall": "npm run hooks:install",
    "lint:security": "npm run security:eslint",
    "check:architecture": "ts-node tests/unit/architecture/cli/check-architecture.ts",
    "typecheck": "tsc --project config/tsconfig.json --noEmit",
    "build": "npm run build:clean && npm run build:ts && npm run build:py && npm run build:go",
    "build:clean": "rimraf dist",
    "build:ts": "tsc -p config/tsconfig.build.json && cp -r cmd/api/views dist/api/views",
    "build:py": "poetry build && mkdir -p dist/python && cp -r cmd/orchestrator dist/python/",
    "build:go": "cd cmd/binary-processor && GOARCH=amd64 GOOS=linux go build -mod=../config/go.mod -o ../../dist/binary-processor",
    "build:dev": "npm run build -- --env=dev",
    "build:qa": "npm run build -- --env=qa",
    "build:prod": "npm run build -- --env=prod",
    "containers:build": "./scripts/build-containers.sh",
    "containers:up": "./scripts/start-containers.sh",
    "containers:down": "./scripts/stop-containers.sh",
    "master-build": "./scripts/master-build.sh",
    "master-build:qa": "./scripts/master-build.sh qa",
    "master-build:prod": "./scripts/master-build.sh prod",
    "deploy": "./scripts/deploy.sh",
    "deploy:qa": "./scripts/deploy.sh qa",
    "deploy:prod": "./scripts/deploy.sh prod",
    "start": "node dist/api/index.js",
    "start:api": "node dist/api/index.js",
    "start:orchestrator": "./scripts/run-orchestrator.sh",
    "start:binary": "./scripts/run-binary-processor.sh",
    "dev": "cross-env NODE_ENV=development ts-node cmd/api/index.ts",
    "dev:api": "nodemon --exec ts-node cmd/api/index.ts",
    "dev:orchestrator": "cd cmd/orchestrator && poetry run python -m uvicorn main:app --reload --host 0.0.0.0 --port 8000",
    "dev:binary": "cd cmd/binary-processor && go run -mod=../config/go.mod main.go",
    "dev:all": "concurrently \"npm run dev:api\" \"npm run dev:orchestrator\" \"npm run dev:binary\"",
    "dev:test-watch": "jest --config=config/jest.config.js --watch",
    "security:codeql": "./scripts/security/run-codeql.sh",
    "security:eslint": "eslint --ext .ts,.tsx --config .eslintrc.security.js .",
    "security:scan": "npm run security:eslint && ./scripts/security/run-codeql.sh --languages javascript",
    "security:report": "node scripts/security/generate-security-report.js",
    "version:check": "node scripts/util/version-check.js",
    "version:sync": "node scripts/util/update-version.js -v $(node -e \"console.log(require('./package.json').version)\")",
    "version:bump": "node scripts/util/update-version.js -b",
    "version:patch": "node scripts/util/update-version.js -p",
    "version:minor": "node scripts/util/update-version.js -n",
    "version:major": "node scripts/util/update-version.js -m",
    "version:push": "node scripts/util/update-version.js -b -g"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/heymumford/skidbladnir.git"
  },
  "keywords": [
    "test",
    "migration",
    "jira",
    "zephyr",
    "qtest",
    "alm",
    "test-management"
  ],
  "author": "Eric Mumford",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/heymumford/skidbladnir/issues"
  },
  "homepage": "https://github.com/heymumford/skidbladnir#readme",
  "workspaces": [
    "packages/*"
  ],
  "devDependencies": {
    "@babel/plugin-transform-modules-commonjs": "^7.26.3",
    "@babel/preset-react": "^7.26.3",
    "@babel/preset-typescript": "^7.27.0",
    "@cucumber/cucumber": "^11.2.0",
    "@cucumber/pretty-formatter": "^1.0.1",
    "@testing-library/cypress": "^10.0.3",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@types/chai": "^4.3.20",
    "@types/cucumber": "^6.0.1",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.1",
    "@types/jsdom": "^21.0.0",
    "@types/lodash": "^4.17.16",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.16.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "axe-core": "^4.10.3",
    "axios": "^1.4.0",
    "chai": "^4.5.0",
    "chalk": "^4.1.2",
    "concurrently": "^8.0.1",
    "cross-env": "^7.0.3",
    "css-mediaquery": "^0.1.2",
    "cucumber-html-reporter": "^7.2.0",
    "cypress": "^14.3.0",
    "eslint": "^8.39.0",
    "eslint-plugin-security": "^1.7.1",
    "fast-xml-parser": "^4.5.3",
    "glob": "^10.3.10",
    "jest": "^29.5.0",
    "jest-axe": "^10.0.0",
    "jsdom": "^22.1.0",
    "lodash": "^4.17.21",
    "mocha": "^10.2.0",
    "nock": "^14.0.3",
    "nodemon": "^2.0.22",
    "rimraf": "^5.0.1",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "yargs": "^17.7.2"
  },
  "dependencies": {
    "express": "^4.18.2",
    "i18next": "^24.2.3",
    "i18next-browser-languagedetector": "^8.0.4",
    "i18next-http-backend": "^3.0.2",
    "react-i18next": "^15.4.1",
    "react-json-tree": "^0.18.0",
    "uuid": "^9.0.0"
  }
}
